{"version":3,"sources":["topbar/TopbarView.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Wrapper","LinkItem","props","active","Topbar","useState","currentTab","setCurrentTab","useEffect","tab","changeTab","e","currentTarget","dataset","data-tab","onClick","Banner","section","Section","FlexWrapper","RuleIntroItem","RuleIcon","RuleText","RuleTextDark","ProcessIcon","ProcessIntroText","ProcessRule","LogoArea","GameTitle","h1","GameSubtitle","Logo","a","IntroContent","Title","h2","ContentText","IntroContentTextArea","BtnArea","LinkBtn","LinkBtnDouble","App","id","ratio","priority","activeSection","setActiveSection","rootRef","useRef","singleRefs","reduce","acc","value","ref","React","createRef","observer","IntersectionObserver","entries","forEach","entry","target","intersectionRatio","activeThing","Object","values","root","current","threshold","Array","fill","map","v","i","observe","disconnect","newTab","window","scrollTo","top","offsetTop","behavior","href","rel","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54b7198d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\n// styles\nconst Container = styled.div`\n  width: 100%;\n  height: 60px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #3f281d;\n  /* background: linear-gradient(to bottom, #281510 0%, #4a220a 100%); */\n  box-shadow: 0 1px 0 0 #555;\n`;\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin: 0 auto;\n`;\nconst LinkItem = styled.div`\n  font-size: 20px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props => props.active ? '#d59b57' : '#aaa'};\n  transition: .2s;\n  cursor: pointer;\n`;\n\n// view\nconst Topbar = props => {\n  // states\n  const [currentTab, setCurrentTab] = useState(null)\n  // effects\n  useEffect(() => {\n    setCurrentTab(props.tab)\n  }, [props.tab])\n\n  // functions\n  const changeTab = e => {\n    const {\n      changeTab\n    } = props\n    changeTab && changeTab(e.currentTarget.dataset.tab)\n  }\n\n  return (\n    <Container>\n      <Wrapper>\n        <LinkItem\n          active={currentTab === 'rule'}\n          data-tab=\"rule\"\n          onClick={e => changeTab(e)}\n        >\n          賽制\n        </LinkItem>\n        <LinkItem\n          active={currentTab === 'process'}\n          data-tab=\"process\"\n          onClick={e => changeTab(e)}\n        >\n          賽程\n        </LinkItem>\n        <LinkItem\n          active={currentTab === 'intro'}\n          data-tab=\"intro\"\n          onClick={e => changeTab(e)}\n        >\n          簡介\n        </LinkItem>\n        {/* <LinkItem\n          active={currentTab === 'help'}\n          data-tab=\"help\"\n          onClick={e => changeTab(e)}\n        >\n          聯繫\n        </LinkItem> */}\n      </Wrapper>\n    </Container>\n  )\n}\n\nexport default Topbar","import React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport Topbar from './topbar/TopbarView'\n\n// icons \nimport { GiBigGear, GiBrutalHelm, GiDozen, GiDecapitation, GiCrownedSkull } from \"react-icons/gi\";\nimport { FaStream } from \"react-icons/fa\";\n\n// styles\nconst Container = styled.div`\n  width: 100%;\n  background-color: #342420;\n  min-height: 100vh;\n  padding-top: 60px;\n`;\nconst Banner = styled.section`\n  width: 100%;\n  background-color: #fff;\n  background-image: url(./images/banner.jpg);\n  padding-bottom: 56.25%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n`;\nconst Section = styled.section`\n  width: 100%;\n  padding: 80px 20px;\n  /* height: 50vh; */\n  &:nth-child(2n) {\n    background-color: #e5e5e5;\n  }\n`;\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 0 auto;\n  @media screen and (max-width: 1080px){\n    padding: 0 20px;\n  }\n`;\nconst FlexWrapper = styled(Wrapper)`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  @media screen and (max-width: 480px){\n    display: block;\n  }\n`;\nconst RuleIntroItem = styled.div`\n  width: 28%;\n  @media screen and (max-width: 480px){\n    width: 100%;\n    margin-top: 40px;\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n`;\nconst RuleIcon = styled.div`\n  width: 100%;\n  text-align: center;\n  svg {\n    color: #b68e60;\n    font-size: 60px;\n  }\n`;\nconst RuleText = styled.div`\n  margin-top: 30px;\n  text-align: center;\n  color: #ffefd4;\n  font-size: 24px;\n  @media screen and (max-width: 480px){\n    font-size: 20px;\n  }\n`;\nconst RuleTextDark = styled(RuleText)`\n  color: #342420;\n  font-weight: bold;\n  margin-top: 0;\n  @media screen and (max-width: 480px){\n    font-size: 24px;\n  }\n`;\nconst ProcessIcon = styled.div`\n  width: 100%;\n  text-align: center;\n  margin-top: 30px;\n  @media screen and (max-width: 480px){\n    margin-top: 20px;\n  }\n  svg {\n    color: #b68e60;\n    font-size: 60px;\n  }\n`;\nconst ProcessIntroText = styled.div`\n  width: 100%;\n  font-size: 20px;\n  line-height: 28px;\n  color: #342420;\n  margin-top: 20px;\n  text-align: center;\n  @media screen and (max-width: 480px){\n    font-size: 16px;\n    line-height: 22px;\n  }\n`;\nconst ProcessRule = styled.div`\n  width: 100%;\n  margin-top: 60px;\n  color: #342420;\n  font-size: 16px;\n  line-height: 24px;\n  @media screen and (max-width: 480px){\n    font-size: 14px;\n    line-height: 22px;\n  }\n`;\nconst LogoArea = styled.div`\n  margin-right: 30px;\n  width: 300px;\n  @media screen and (max-width: 480px){\n    width: 100%;\n  }\n`;\nconst GameTitle = styled.h1`\n  color: #ffefd4;\n  font-size: 36px;\n  margin-bottom: 10px;\n  text-align: center;\n  span {\n    font-size: 20px;\n    color: #b68e60;\n  }\n\n  @media screen and (max-width: 480px){\n    font-size: 28px;\n    span {\n      display: none;\n    }\n  }\n`;\nconst GameSubtitle = styled.div`\n  font-size: 16px;\n  color: #b68e60;\n  margin-bottom: 40px;\n  text-align: center;\n`;\nconst Logo = styled.a`\n  display: block;\n  background-image: url(./images/logo.jpg);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 300px;\n  height: 300px;\n  border-radius: 20%;\n  @media screen and (max-width: 480px){\n    width: 70%;\n    height: 0px;\n    padding-bottom: 70%;\n    margin: 0 auto;\n  }\n`;\nconst IntroContent = styled.div`\n  width: calc(100% - 330px);\n  @media screen and (max-width: 480px){\n    width: 100%;\n    margin-top: 30px;\n  }\n`;\nconst Title = styled.h2`\n  color: #ffefd4;\n  width: 100%;\n  text-align: center;\n  margin: 0;\n  margin-bottom: 20px;\n  font-size: 30px;\n  @media screen and (max-width: 480px){\n      font-size: 24px;\n  }\n`;\nconst ContentText = styled.div`\n  color: #b68e60;\n  font-size: 20px;\n  line-height: 28px;\n  margin-bottom: 16px;\n  @media screen and (max-width: 480px){\n      font-size: 16px;\n      line-height: 22px;\n  }\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst IntroContentTextArea = styled.div`\n  width: 100%;\n`;\nconst BtnArea = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 60px;\n  @media screen and (max-width: 480px){\n    display: block;\n  }\n`;\nconst LinkBtn = styled.a`\n  text-decoration: none;\n  margin: 60px auto 0 auto;\n  background-color: #ebdb8f;\n  width: 220px;\n  height: 50px;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 24px;\n  transition: .2s;\n  cursor: pointer;\n  &:hover {\n    background-color: #cbbb6f;;\n  }\n`;\nconst LinkBtnDouble = styled(LinkBtn)`\n  margin: 0;\n  @media screen and (max-width: 480px){\n    margin: 0 auto;\n  }\n  &:first-child {\n    margin-right: 30px;\n    @media screen and (max-width: 480px){\n      margin: 0 auto;\n      margin-bottom: 30px;\n    }\n  }\n`;\n\n// view\nfunction App() {\n  // states\n  const [activeSection, setActiveSection] = useState({\n    id: null,\n    ratio: 0,\n    priority: 0,\n  })\n\n  // refs\n  const rootRef = useRef(null)\n  const sectionObject = [\n    {\n      id: 'intro',\n      priority: 3\n    },\n    {\n      id: 'rule',\n      priority: 1\n    },\n    {\n      id: 'process',\n      priority: 2\n    },\n    // {\n    //   id: 'help',\n    //   priority: 4\n    // }\n  ]\n  const singleRefs = sectionObject.reduce((acc, value) => {\n      acc[value.id] = {\n        ref: React.createRef(),\n        id: value.id,\n        ratio: 0,\n        priority: value.priority\n      };\n    return acc;\n  }, {});\n\n  // IntersectionObserver\n  const callback = entries => {\n    entries.forEach(\n      entry => singleRefs[entry.target.id].ratio = entry.intersectionRatio\n    )\n    const activeThing = Object.values(singleRefs).reduce(\n      (acc, value) => (value.ratio > acc.ratio + .25 ? value : acc),\n      activeSection,\n    );\n    if (activeThing.ratio > activeSection.ratio) {\n      setActiveSection(activeThing)\n    }\n  };\n  const observer = new IntersectionObserver(callback, {\n    root: rootRef.current,\n    threshold: new Array(101).fill(0).map((v, i) => i * 0.01),\n  });\n  // effects\n  useEffect(() => {\n    Object.values(singleRefs).forEach(value =>\n      observer.observe(value.ref.current),\n    );\n    return () => observer.disconnect()\n    // eslint-disable-next-line\n  }, [])\n\n  // functions\n  const changeTab = newTab => {\n    window.scrollTo({\n      top: singleRefs[newTab].ref.current.offsetTop - 60,\n      behavior: 'smooth'\n    })\n  }\n\n  return (\n    <Container\n      ref={rootRef}\n    >\n      <Topbar \n        tab={activeSection.id}\n        changeTab={newTab => changeTab(newTab)}\n      />\n      <Banner />\n      <Section\n        ref={singleRefs['rule'].ref}\n        id=\"rule\"\n      >\n        <GameTitle>\n          2<span>nd</span> The Monsters 怪物盃\n        </GameTitle>\n        <GameSubtitle>\n          由 MPC 怪物盃籌備委員會主辦，多多自走棋官方協辦\n        </GameSubtitle>\n        <FlexWrapper>\n          <RuleIntroItem>\n            <RuleIcon>\n              <GiBigGear />\n            </RuleIcon>\n            <RuleText>\n              變種瑞士賽制\n            </RuleText>\n          </RuleIntroItem>\n          <RuleIntroItem>\n            <RuleIcon>\n              <GiBrutalHelm />\n            </RuleIcon>\n            <RuleText>\n              64 人參戰\n            </RuleText>\n          </RuleIntroItem>\n          <RuleIntroItem>\n            <RuleIcon>\n              <FaStream />\n            </RuleIcon>\n            <RuleText>\n              戰況即時轉播\n            </RuleText>\n          </RuleIntroItem>\n        </FlexWrapper>\n        <BtnArea>\n          <LinkBtnDouble\n            href=\"https://drive.google.com/file/d/1Ocrr1LNm8ujatEOQ99Cf99L1iZSX7eRt/view\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener nofollow\"\n          >\n            對戰積分\n          </LinkBtnDouble>\n          <LinkBtnDouble\n            href=\"https://www.youtube.com/watch?v=6rNLeC_Vg7U\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener nofollow\"\n          >\n            前往直播\n          </LinkBtnDouble>\n        </BtnArea>\n      </Section>\n      <Section\n        ref={singleRefs['process'].ref}\n        id=\"process\"\n      >\n        <FlexWrapper>\n          <RuleIntroItem>\n            <RuleTextDark>\n              海選階段\n            </RuleTextDark>\n            <ProcessIcon>\n              <GiDozen />\n            </ProcessIcon>\n            <ProcessIntroText>\n              每 8 人一組，共對戰三輪，取積分前 32 位晉級淘汰賽階段。\n            </ProcessIntroText>\n          </RuleIntroItem>\n          <RuleIntroItem>\n            <RuleTextDark>\n              淘汰賽階段\n            </RuleTextDark>\n            <ProcessIcon>\n              <GiDecapitation />\n            </ProcessIcon>\n            <ProcessIntroText>\n              每 8 人一組，共對戰兩輪，取積分前 8 位晉級決賽。\n            </ProcessIntroText>\n          </RuleIntroItem>\n          <RuleIntroItem>\n            <RuleTextDark>\n              決賽階段\n            </RuleTextDark>\n            <ProcessIcon>\n              <GiCrownedSkull />\n            </ProcessIcon>\n            <ProcessIntroText>\n              共對戰三梯，總計分數最高者為優勝！\n            </ProcessIntroText>\n          </RuleIntroItem>\n        </FlexWrapper>\n        <ProcessRule>\n          <Wrapper>\n            * 每場比賽結束後計算積分，第一名獲得 4 分、第二名 3 分、第三名 2 分、第四名為 1 分，第五名(含)以後的參賽者不會獲得積分。\n          </Wrapper>\n          <LinkBtn\n            href=\"/images/rule.jpg\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener nofollow\"\n          >\n            詳細說明\n          </LinkBtn>\n        </ProcessRule>\n      </Section>\n      <Section\n        ref={singleRefs['intro'].ref}\n        id=\"intro\"\n      >\n        <FlexWrapper>\n          <LogoArea>\n            <Logo \n              href=\"https://www.zizouqi.com/?lan=zh-cn&mobile=false\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener nofollow\"\n            />\n          </LogoArea>\n          <IntroContent>\n            <Title>\n              MPC 怪物盃籌備委員會\n            </Title>\n            <IntroContentTextArea>\n              <ContentText>\n                由一群遊戲、電競、技術同好，憑著一股熱血聚集而成的團隊，希望帶來世界級的賽事與氛圍。\n              </ContentText>\n              <ContentText>\n                本次是怪物盃第二屆的比賽，在本屆我們甚至有了自己的活動網頁，也已向多多自走棋官方募得獎勵，相信將來賽事規模能夠越來越大。\n              </ContentText>\n              <ContentText>\n                目前我們缺乏 ui 設計人才、網站後端人才，如果您也有相同的熱血，歡迎與我們聯繫！\n              </ContentText>\n              <LinkBtn\n                href=\"mailto:94lovems0825@gmail.com\"\n              >\n                聯絡我們\n              </LinkBtn>\n            </IntroContentTextArea>\n          </IntroContent>\n        </FlexWrapper>\n        {/* <LinkBtn>\n          進入官網\n        </LinkBtn> */}\n      </Section>\n      {/* <Section\n        ref={singleRefs['help'].ref}\n        id=\"help\"\n      >\n        help\n      </Section>\n      <Section>\n        footer\n      </Section> */}\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}